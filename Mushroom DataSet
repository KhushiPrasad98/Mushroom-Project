{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "fa6f4045",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-08-22T05:31:30.912814Z",
     "iopub.status.busy": "2024-08-22T05:31:30.911681Z",
     "iopub.status.idle": "2024-08-22T05:31:31.389337Z",
     "shell.execute_reply": "2024-08-22T05:31:31.387965Z"
    },
    "papermill": {
     "duration": 0.485922,
     "end_time": "2024-08-22T05:31:31.392213",
     "exception": false,
     "start_time": "2024-08-22T05:31:30.906291",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/playground-series-s4e8/sample_submission.csv\n",
      "/kaggle/input/playground-series-s4e8/train.csv\n",
      "/kaggle/input/playground-series-s4e8/test.csv\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "f5919cd5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-22T05:31:31.400177Z",
     "iopub.status.busy": "2024-08-22T05:31:31.399508Z",
     "iopub.status.idle": "2024-08-22T05:31:32.119145Z",
     "shell.execute_reply": "2024-08-22T05:31:32.117844Z"
    },
    "papermill": {
     "duration": 0.726718,
     "end_time": "2024-08-22T05:31:32.122029",
     "exception": false,
     "start_time": "2024-08-22T05:31:31.395311",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "Mushroom_Sample = pd.read_csv(\"/kaggle/input/playground-series-s4e8/sample_submission.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "ed6ae624",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-22T05:31:32.129159Z",
     "iopub.status.busy": "2024-08-22T05:31:32.128687Z",
     "iopub.status.idle": "2024-08-22T05:31:32.156162Z",
     "shell.execute_reply": "2024-08-22T05:31:32.154885Z"
    },
    "papermill": {
     "duration": 0.034231,
     "end_time": "2024-08-22T05:31:32.158904",
     "exception": false,
     "start_time": "2024-08-22T05:31:32.124673",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<bound method NDFrame.head of               id class\n",
       "0        3116945     e\n",
       "1        3116946     e\n",
       "2        3116947     e\n",
       "3        3116948     e\n",
       "4        3116949     e\n",
       "...          ...   ...\n",
       "2077959  5194904     e\n",
       "2077960  5194905     e\n",
       "2077961  5194906     e\n",
       "2077962  5194907     e\n",
       "2077963  5194908     e\n",
       "\n",
       "[2077964 rows x 2 columns]>"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Mushroom_Sample.head"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "databundleVersionId": 9045607,
     "sourceId": 76727,
     "sourceType": "competition"
    }
   ],
   "dockerImageVersionId": 30761,
   "isGpuEnabled": false,
   "isInternetEnabled": false,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.14"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 5.034676,
   "end_time": "2024-08-22T05:31:32.684396",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-08-22T05:31:27.649720",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
